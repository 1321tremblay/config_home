setw -g mode-keys vi
set -g set-clipboard on      # use system clipboard
set -g mouse on
set -g detach-on-destroy off
set-option -g renumber-windows on
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set -g default-terminal "xterm-256color"

set -g status-position bottom
set -g status-left-length 300
set -g status-right-length 300

# Allow applications like nvim to set the tmux window title
set -g set-titles on
set -g set-titles-string "#S - #I - #T"   # This will set the tmux window title to the current window's name


set -g status off

set -g message-style "fg=default,bold"





set -g status-style bg=default,fg=#ffffff

set -g status-right "  %Y-%m-%d |  %I:%M %p |  #h "
set -g status-left  "   #S |  /⠀"

setw -g window-status-activity-style "underscore"
setw -g window-status-style "NONE"

setw -g window-status-format "#W /"
setw -g window-status-current-format "#W /"


# set-option -g status-style bg=default
#
# set -g status-right "#[fg=#ebdbb2,nobold,nounderscore,noitalics]  #[fg=#928374,nobold,nounderscore,noitalics]%Y-%m-%d |#[fg=#ebdbb2,nobold,nounderscore,noitalics]  #[fg=#928374,nobold,nounderscore,noitalics]%I:%M %p |#[fg=#ebdbb2,nobold,nounderscore,noitalics]  #[fg=#928374,nobold,nounderscore,noitalics]#h"
#
# set-option -g status-left "#[fg=#ebdbb2,bold]  #[fg=#928374,bold]#S | #[fg=#ebdbb2,bold] #[fg=#928374,bold]/⠀"
#
# setw -g window-status-activity-style "underscore,fg=#7b7c7e"
# setw -g window-status-style "NONE,fg=#928374"
#
# setw -g window-status-format "#[fg=#ebdbb2,bold]#[fg=#928374,nobold,nounderscore,noitalics]#W /"
#
# setw -g window-status-current-format "#[fg=#ebdbb2,bold]#W #[fg=#928374,nobold,nounderscore,noitalics]/#[nobold,nounderscore,noitalics]"
#
#
# set -g status-fg '#928374'


unbind C-b
unbind r
unbind ";"
unbind l
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection

# set prefix
set -g prefix C-a

## Homerow keybinding

# switch sessions
bind h switch-client -n

# switch windows
bind -n M-j previous-window\; display "  #S | #I #W | #I/#{session_windows}"
bind -n M-k next-window\; display "  #S | #I #W | #I/#{session_windows}"

# split windows
bind l split-window -v -c "#{pane_current_path}"
bind ";" split-window -h -c "#{pane_current_path}"

# Create new window
bind a new-window -c "#{pane_current_path}"

# Close pane
bind-key d kill-pane

# Run tmux sessionizer
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

## Other keybindings

# Open notes
bind -r n split-window -h -c "#{pane_current_path}" "nvim ~/personal/notes/todo.md"

# source config
bind r source-file ~/.config/tmux/tmux.conf

# Pane switching
bind -n C-h select-pane -L \;
bind -n C-j select-pane -D \;
bind -n C-k select-pane -U \;
bind -n C-l select-pane -R \;
# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Vim copy mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'dominikduda/tmux_mode_indicator'

run '~/.config/tmux/plugins/tpm/tpm'

# source -q "${THEME_TMUX}"
